@model PagedList.IPagedList<BasicWMS.ViewModels.ProductViewModel>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}
<div class="container-fluid">
    <div class="page-header col-sm-12 text-center">
        <h2 class="title-products col-sm-9" data-bind="text: pageName"></h2>
        <div class="container-fluid pull-right col-sm-3">
            <a href="@Url.Action("Create", "Product")" class="btn btn-primary">Create New</a>
        </div>
    </div>

    <div class="col-sm-3">
        @Html.Action("MenuCategories", "Category", new { selectedCategoryId = ViewBag.SelectedCategoryId ?? 0 })
    </div>

    <div class="col-sm-9">
        @if (!Model.Any())
        {
            <div class="alert alert-danger">
                No existen productos en el almacén.
            </div>
        }
        else
        {
            foreach (var item in Model)
            {
                <div class="col-sm-4">
                    <div id="panel-producto" class="@(item.Disponible ? "panel panel-info" : "panel panel-danger")" @*data-bind="attr: { 'class': $root.isDisponible(@item) ? 'panel panel-default' : 'panel panel-danger' }"*@>
                        <div class="panel-heading">
                            <div class="panel-title">
                                <strong>@Html.DisplayFor(modelItem => item.Codigo)</strong>
                                <div class="badge pull-right">@Html.DisplayFor(modelItem => item.CantidadDisponible)</div>
                            </div>
                        </div>
                        <div class="panel-body">
                            <div>
                                <strong>@Html.DisplayFor(modelItem => item.Nombre)</strong>
                                <span class="badge pull-right">@Html.DisplayFor(modelItem => item.Categoria.Nombre)</span>
                            </div>
                            <p>@Html.DisplayFor(modelItem => item.Descripcion)</p>
                            <div class="container-fluid">
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-primary btn-xs" })
                                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-xs" })
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-xs" })
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div class="col-sm-12">
                <ul class="pagination">
                    @Html.PagedListPager(Model, page => Url.Action("Index",
                        new {page}))
                </ul>
            </div>
            @*<div>
                <ul class="pagination col-sm-9">
                    <li><a href="#">&laquo;</a></li>
                    @for(var itemPage = 0; itemPage <= (Model.Count()/9); itemPage++)
                    {
                        <li><a href="#">@(itemPage+1)</a></li>
                    }
                    <li><a href="#">&raquo;</a></li>
                </ul>

            </div>
        *@
        }

    </div>





    @*<div class="col-sm-9">
            <table class="table table-bordered table-striped table-condensed table-hover">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Codigo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Nombre)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CantidadDisponible)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Descripcion)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Codigo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Nombre)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CantidadDisponible)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.Descripcion)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-primary btn-xs" })
                                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-xs" })
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-xs" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>*@
</div>
<script type="text/javascript" src="~/Scripts/knockout-3.4.2.js"></script>
<script type="text/javascript" src="~/Scripts/jquery-2.0.3.js"></script>
<script type="text/javascript" src="~/Scripts/ViewModels/ProductVM/ProductsViewModel.js"></script>

<script>
    var products = @Html.HtmlConvertToJson(Model)
    ko.applyBindings(new ProductsViewModel(products))
</script>